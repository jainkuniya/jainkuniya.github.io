<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-04-04T11:21:15+05:30</updated><id>http://localhost:4000/</id><title type="html">Vishwesh Jainkuniya</title><subtitle>My personal corner</subtitle><entry><title type="html">GSoC ‘17 Summary: Improve zulip-mobile</title><link href="http://localhost:4000/gsoc-work-report/" rel="alternate" type="text/html" title="GSoC '17 Summary: Improve zulip-mobile" /><published>2017-08-23T10:21:00+05:30</published><updated>2017-08-23T10:21:00+05:30</updated><id>http://localhost:4000/gsoc-work-report</id><content type="html" xml:base="http://localhost:4000/gsoc-work-report/">&lt;p&gt;My proposal for Improve, enhance current React Native app was selected for Google Summer of Code 2017. I worked with the organization &lt;a href=&quot;https://zulipchat.com&quot;&gt;Zulip&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The following sections summarize all my PR’s and learnings.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Don’t show tick/done icon if realm is logged out. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/556&quot;&gt;#556&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Handle narrow to unsubscribed stream. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/564&quot;&gt;#564&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Show smart placeholder for compose input. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/599&quot;&gt;#599&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Improves login flow. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/511&quot;&gt;#511&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Learned more about writing tests for functions, components etc, Jest&lt;/li&gt;
  &lt;li&gt;fix: app crash on sending PM notification bouncer. &lt;a href=&quot;https://github.com/zulip/zulip-android/pull/498&quot;&gt;#498&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt; (on &lt;a href=&quot;https://github.com/zulip/zulip-android&quot;&gt;zulip-android&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;fix: Autocomplete not being displayed. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/611&quot;&gt;#611&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Hide soft keyboard on form submission. Submit form with done button in keyboard &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/483&quot;&gt;#483&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Make autocomplete suggestions scrollable. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/627&quot;&gt;#627&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Fix: Line shown when no # stream suggestion matches. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/622&quot;&gt;#622&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Added clear button to clear search query. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/629&quot;&gt;#629&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Done testing on iOS, Android 4.1.1, 4.2.2, 4.3, 4.4.4, 5.0.&lt;/li&gt;
  &lt;li&gt;Make links and #streams clickable in messages. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/639&quot;&gt;#639&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Apply bold, italic, links, strikethrough styles in messages. &lt;strong&gt;merged&lt;/strong&gt; &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/644&quot;&gt;#644&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Show edited tag if messages are edited. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/645&quot;&gt;#645&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;[WIP] Emoji Picker. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/646&quot;&gt;#646&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Fix: error on message long press in messageSearchScreen. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/655&quot;&gt;#655&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Improvement in messageActionSheet &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/658&quot;&gt;#658&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Restore theme after closing/reopening the app. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/506&quot;&gt;#506&lt;/a&gt; (on &lt;a href=&quot;http://github.com/zulip/zulip-android&quot;&gt;zulip-android&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Make message text color to black on Android. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/663&quot;&gt;#663&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Added share option in messageActionSheet. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/668&quot;&gt;#668&lt;/a&gt; needs review&lt;/li&gt;
  &lt;li&gt;Open link in customTabs on Android. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/670&quot;&gt;#670&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Use custom tabs to open links on Android (like FB messenger, FB, twitter etc). &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/669&quot;&gt;#669&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;[WIP] Add share with/to feature. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/674&quot;&gt;#674&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Open SubscriptionsScreen on clicking All Streams in left drawer. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/681&quot;&gt;#681&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Focus compose text after selecting reply. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/686&quot;&gt;#686&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Added Hindi translations in &lt;code class=&quot;highlighter-rouge&quot;&gt;mobile.json&lt;/code&gt; on &lt;a href=&quot;https://www.transifex.com/zulip/zulip/dashboard/&quot;&gt;Transifex&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Do not dismiss keyboard on clicking auto complete row. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/556&quot;&gt;#695&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Highlight searched text with yellow color. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/697&quot;&gt;#697&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Replaced TextInput with Input in StreamBox. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/708&quot;&gt;#708&lt;/a&gt; not required&lt;/li&gt;
  &lt;li&gt;Better logic to determine whether message is starred or not. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/714&quot;&gt;#714&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Added star/unstar option in messageActionSheet. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/715&quot;&gt;#715&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Written blog on &lt;a href=&quot;https://vishwesh3.github.io/what-are-linters/&quot;&gt;&lt;strong&gt;What are linters?&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Extracted auto complete pop up from ComposeText. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/717&quot;&gt;#717&lt;/a&gt; needs review&lt;/li&gt;
  &lt;li&gt;Search by initials and in email for people auto complete suggestions. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/718&quot;&gt;#718&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Handle realm emojis. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/723&quot;&gt;#723&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Fix: ‘undefined is not an object’ in message search screen. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/732&quot;&gt;#732&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Handle stream create, delete, update, occupy events. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/730&quot;&gt;#730&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Ensure stream is valid before narrowing to it from link in messages. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/735&quot;&gt;#735&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Handle narrow to unsubscribed stream. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/736&quot;&gt;#736&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Better handling of EVENT_MESSAGE_UPDATE. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/752&quot;&gt;#752&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Prioritizes people autocomplete suggestions &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/762&quot;&gt;#762&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[Android] Fix: messageList not displayed when keyboard pops up in SearchMessage Screen. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/772&quot;&gt;#772&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Fix: email not visible in autocomplete on smaller devices. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/776&quot;&gt;#776&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Added support of rendering math, &lt;code class=&quot;highlighter-rouge&quot;&gt;mi&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;mn&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;math&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;mrow&lt;/code&gt; tags. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/780&quot;&gt;#780&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;fix: splitting message content in several lines. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/790&quot;&gt;#790&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Added CSS styles for code rendering. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/798&quot;&gt;#798&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Split class based and tag based text styles. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/803&quot;&gt;#803&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;fix: overlapping of forgot password and google button. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/811&quot;&gt;#811&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Added Group Details Screen. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/821&quot;&gt;#821&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Better code formatting &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/834&quot;&gt;#834&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Fix: &lt;code class=&quot;highlighter-rouge&quot;&gt;@mention&lt;/code&gt; suggestions disappear after typing a space. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/839&quot;&gt;#839&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Use actions object to get loginSuccess method in DevAuthScreen. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/840&quot;&gt;#840&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Added null object constants. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/852&quot;&gt;#852&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;PR fix: jest errors. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/858&quot;&gt;#858&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Added &lt;code class=&quot;highlighter-rouge&quot;&gt;mfrac&lt;/code&gt; tag to render fractions in messages. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/866&quot;&gt;#866&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;No need to show action sheet on long press privateMessageHeader. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/868&quot;&gt;#868&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Replaced maps with FlatList in AccountPickScreen. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/869&quot;&gt;#869&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;FIx: error on message long press. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/870&quot;&gt;#870&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Converted isSubscribed() function in &lt;code class=&quot;highlighter-rouge&quot;&gt;Chat.js&lt;/code&gt; to a selector. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/874&quot;&gt;#874&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Initial Implementation of Sentry. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/881&quot;&gt;#881&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Filter deactivated users from UserScreen and PeopleAutocomplete. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/889&quot;&gt;#889&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Disable switch in Subscription screen for private stream which is not subscribed. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/888&quot;&gt;#888&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Fix: undefined error on toggling subscribe switch in subsriptionsScreen. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/887&quot;&gt;#887&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Fix Android, iOS build. fix Sentry config to upload source map. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/891&quot;&gt;#891&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;fix: error on clicking switch account button. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/894&quot;&gt;#894&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Fix: headers not being shown in user screen. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/900&quot;&gt;#900&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Fix: undefined stream name in Lightbox. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/901&quot;&gt;#901&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Show user status in UserScreen, PeopleAutocomplete and right drawer. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/897&quot;&gt;#897&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Created selector to get subscribed streams. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/911&quot;&gt;#911&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Fix: center align of quote text and bullets. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/923&quot;&gt;#923&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;fix: only active status is shown in UserStatusIndicator. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/930&quot;&gt;#930&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Renamed mentioned to mentions. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/937&quot;&gt;#937&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Apply ‘user-mention-me’ styles to self mentions span. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/938&quot;&gt;#938&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Handle alert_words events and fetch them in rest of initial data. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/957&quot;&gt;#957&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;fix: mute topics are not updated on events. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/959&quot;&gt;#959&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Use precise distributor for travis build. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/958&quot;&gt;#958&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Translated some strings on &lt;a href=&quot;https://www.transifex.com/zulip/zulip/dashboard/&quot;&gt;Transifex&lt;/a&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;django.po&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;mobile.json&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Fix: Android crash on entering realm url without protocol. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/963&quot;&gt;#963&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Change sort order of streams list to match Zulip’s standards. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/969&quot;&gt;#969&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Initial implementation of stream settings. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/975&quot;&gt;#975&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Added Muted Topic screen in Setting Detail Screen. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/982&quot;&gt;#982&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Created Alert words screen in Setting details screen. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/986&quot;&gt;#986&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Fix: autocomplete not being visible on current master. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/989&quot;&gt;#989&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Fix: status bar style in dark theme for private narrow. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/1004&quot;&gt;#1004&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Better handling of create button in create group screen. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/1013&quot;&gt;#1013&lt;/a&gt; another better one got &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;fix: message longPress not working. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/1018&quot;&gt;#1018&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Improve options selections in messageActionSheet. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/1020&quot;&gt;#1020&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Fix message editing. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/1026&quot;&gt;#1026&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Fix Status bar style issue in default theme. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/1038&quot;&gt;#1038&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Fix: Compose menu action sheet not visible in Android. &lt;strong&gt;merged&lt;/strong&gt; &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/1045&quot;&gt;#1045&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Fix: message long press not working. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/1047&quot;&gt;#1047&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Fix text not visible in Input/MultilineInput ComposeBox &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/1046&quot;&gt;#1046&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Fix: list inside list message rendering. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/1063&quot;&gt;#1063&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Fix: warnings on clicking Add new Account button. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/1069&quot;&gt;#1069&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Fix: UserStatusIndicator not visible. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/1071&quot;&gt;#1071&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Rework on getAutocompletedText. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/1078&quot;&gt;#1078&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Focus message input after selecting reply from message action sheet. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/1089&quot;&gt;#1089&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Rework on delete option in message option. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/1090&quot;&gt;#1090&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Added tests for status bar style and titleSelectors. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/1094&quot;&gt;#1094&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Show auto complete suggestion when user types in middle/start of the input. &lt;a href=&quot;https://github.com/zulip/zulip-mobile/pull/1095&quot;&gt;#1095&lt;/a&gt; &lt;strong&gt;merged&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;It was a great experience working for four months in my GSoC project under &lt;a href=&quot;https://zulipchat.com&quot;&gt;Zulip&lt;/a&gt;. Thanks Zulip community for your guidance and support. Thanks &lt;a href=&quot;https://summerofcode.withgoogle.com&quot;&gt;Google&lt;/a&gt; and &lt;a href=&quot;https://zulipchat.com&quot;&gt;Zulip&lt;/a&gt; for giving us this opportunity. 😄 :heart:&lt;/p&gt;</content><author><name>vishwesh</name></author><category term="blog" /><category term="gsoc" /><category term="work report" /><summary type="html">My proposal for Improve, enhance current React Native app was selected for Google Summer of Code 2017. I worked with the organization Zulip.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/gsco_banner.png" /></entry><entry><title type="html">What are linter?</title><link href="http://localhost:4000/what-are-linters/" rel="alternate" type="text/html" title="What are linter?" /><published>2017-08-13T00:46:00+05:30</published><updated>2017-08-13T00:46:00+05:30</updated><id>http://localhost:4000/what-are-linters</id><content type="html" xml:base="http://localhost:4000/what-are-linters/">&lt;p&gt;What are linters?&lt;/p&gt;

&lt;p&gt;Linters? I also don’t know? Let’s google it.
 &lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;a machine for removing the short fibres from cotton seeds after ginning.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In the similar way they remove errors from code.
They can detect potential bugs, as well as code styles which are difficult to maintain. This are automated tools, no manual work is needed to run once they have been successfully set up.
Some of the useful linters are &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.jslint.com&quot;&gt;JSLint&lt;/a&gt; (for javascript)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://csslint.net&quot;&gt;CSSLint&lt;/a&gt; (for CSS)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://jshint.com&quot;&gt;JSHint&lt;/a&gt; (for javascript)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.pylint.org&quot;&gt;Pylint&lt;/a&gt; (for Python)&lt;/li&gt;
  &lt;li&gt;you can find such tools for other languages too.
 
Let’s explore more on one such tool &lt;code class=&quot;highlighter-rouge&quot;&gt;ESLint&lt;/code&gt;.
&lt;code class=&quot;highlighter-rouge&quot;&gt;ESLint&lt;/code&gt; is an open source JS listing tool created by Nicholas C. Zakas. Here we will set up this in our code editor.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;here are basically two types of setup.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Editor specific
    &lt;ul&gt;
      &lt;li&gt;Install Linter package and plug ESLint into it.
 &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Project specific
    &lt;ul&gt;
      &lt;li&gt;Create a config file which will consists of all your lint rules.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are steps to install it in different editors.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;in Atom editor.
    &lt;ul&gt;
      &lt;li&gt;steps:
        &lt;ul&gt;
          &lt;li&gt;Open editor preferences.&lt;/li&gt;
          &lt;li&gt;Click on install tab.&lt;/li&gt;
          &lt;li&gt;search for &lt;code class=&quot;highlighter-rouge&quot;&gt;linter-eslint&lt;/code&gt; (install it)&lt;/li&gt;
          &lt;li&gt;search for &lt;code class=&quot;highlighter-rouge&quot;&gt;linter&lt;/code&gt;. (install it)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;Editor specific setup is now completed.&lt;/p&gt;

    &lt;p&gt;Now for project specific one (I usually write react-native code in JS, thus taking a example of RN project)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Open project directory in terminal.
        &lt;ul&gt;
          &lt;li&gt;Install a npm package by &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install --save-dev eslint-config-rallycoding&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Add a configuration file.
        &lt;ul&gt;
          &lt;li&gt;Create a new file in project dir and name it &lt;code class=&quot;highlighter-rouge&quot;&gt;.eslintrc&lt;/code&gt; and paste this lines
&lt;code class=&quot;highlighter-rouge&quot;&gt;{ “extends”: “rallycoding” }&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;(This will tell &lt;code class=&quot;highlighter-rouge&quot;&gt;ESLint&lt;/code&gt; to go and use configuration that we have just installed. Note currently we are defining whole rule, we are using rules present in `eslint-config-rallycoding’)&lt;/p&gt;

    &lt;p&gt;Done with the setup. Now reopen file to get started.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;setup with Sublime text 3 (sublime text 2 doesn’t support)
    Follow following steps :
    &lt;ul&gt;
      &lt;li&gt;Install eslint globally with NPM.
        &lt;ul&gt;
          &lt;li&gt;run &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install -g eslint&lt;/code&gt; in terminal inside project directory. (This will install &lt;code class=&quot;highlighter-rouge&quot;&gt;ESLint&lt;/code&gt; package globally).&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Install Package Control (it is package manager for sublime 3).
        &lt;ul&gt;
          &lt;li&gt;Open &lt;a href=&quot;https://packagecontrol.io/installation&quot;&gt;https://packagecontrol.io/installation&lt;/a&gt; in browser.&lt;/li&gt;
          &lt;li&gt;Copy code block from &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;write&lt;/code&gt;.&lt;/li&gt;
          &lt;li&gt;Paste this in sublime console.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Go to View tab on the top, click show console.
        &lt;ul&gt;
          &lt;li&gt;Paste it and hit enter key.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Install &lt;code class=&quot;highlighter-rouge&quot;&gt;linter&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;eslint&lt;/code&gt; through package manager we just install.
        &lt;ul&gt;
          &lt;li&gt;For installing linter
            &lt;ul&gt;
              &lt;li&gt;In sublime text, hit &lt;code class=&quot;highlighter-rouge&quot;&gt;command/ctrl + shift + p&lt;/code&gt;.&lt;/li&gt;
              &lt;li&gt;Search for install package option. Select it.&lt;/li&gt;
              &lt;li&gt;Now search for &lt;code class=&quot;highlighter-rouge&quot;&gt;SublimeLinter&lt;/code&gt;, select it to install.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Now install &lt;code class=&quot;highlighter-rouge&quot;&gt;eslint&lt;/code&gt;
            &lt;ul&gt;
              &lt;li&gt;In sublime text, hit command + shift + p.&lt;/li&gt;
              &lt;li&gt;Search for install package option. Select it.&lt;/li&gt;
              &lt;li&gt;Now search for &lt;code class=&quot;highlighter-rouge&quot;&gt;SublimeLinter-contrib-eslint&lt;/code&gt;, select it to install.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Install a config with NPM.
            &lt;ul&gt;
              &lt;li&gt;run &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install --save-dev eslint-config-rallycoding&lt;/code&gt; in the terminal inside project directory.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Create a new file in project dir and name it .eslintrc and paste following lines in to it.
&lt;code class=&quot;highlighter-rouge&quot;&gt;{ “extends”: “rallycoding” }&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;Done with the installation part. Now reopen sublime text to get started with eslint.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;setup with VSCode.
Follow following steps :
    &lt;ul&gt;
      &lt;li&gt;Install eslint globally with NPM.
        &lt;ul&gt;
          &lt;li&gt;run &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install -g eslint&lt;/code&gt; in terminal inside project directory. (This will install &lt;code class=&quot;highlighter-rouge&quot;&gt;eslint&lt;/code&gt; package globally).&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;On the left hand side, click on packages option, search for &lt;code class=&quot;highlighter-rouge&quot;&gt;ESLint&lt;/code&gt;  and then click on install button. After installing enable &lt;code class=&quot;highlighter-rouge&quot;&gt;ESLint&lt;/code&gt; extension.&lt;/li&gt;
      &lt;li&gt;run &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install --save-dev eslint-config-rallycoding&lt;/code&gt; in the terminal inside project directory.&lt;/li&gt;
      &lt;li&gt;Create a new file in project dir and name it .eslintrc and paste following lines in to it.
&lt;code class=&quot;highlighter-rouge&quot;&gt;{ “extends”: “rallycoding” }&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;Great! done with the installation part.  
 &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;want to setup &lt;code class=&quot;highlighter-rouge&quot;&gt;ESLint&lt;/code&gt; for Vim editor? &lt;a href=&quot;https://medium.com/@hpux/vim-and-eslint-16fa08cc580f&quot;&gt;This&lt;/a&gt; awesome article by &lt;a href=&quot;https://medium.com/@hpux&quot;&gt;David Qorashi&lt;/a&gt; will guide you.
 
In the above setup we have used some &lt;code class=&quot;highlighter-rouge&quot;&gt;rallycoding&lt;/code&gt; ESLint rules, you can use others set of rules as well. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;final-thought&quot;&gt;Final thought&lt;/h3&gt;
&lt;p&gt;Linters are very useful and simple solution for basic syntax checking. They will not only save you time, but will also make you write better code. 
 
(complied all this stuff from various sites)&lt;/p&gt;

&lt;p&gt;Have a nice day!&lt;/p&gt;</content><author><name>vishwesh</name></author><category term="blog" /><category term="linters" /><category term="ESLint" /><category term="atom" /><category term="sublime" /><category term="visual studio" /><summary type="html">What are linters?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/linters.png" /></entry><entry><title type="html">Version Controlling System (VCS)</title><link href="http://localhost:4000/version-controlling-system/" rel="alternate" type="text/html" title="Version Controlling System (VCS)" /><published>2017-06-02T22:38:00+05:30</published><updated>2017-06-02T22:38:00+05:30</updated><id>http://localhost:4000/version-controlling-system</id><content type="html" xml:base="http://localhost:4000/version-controlling-system/">&lt;p&gt;What is VCS? What is the use of this? Why it is used so widely? How does it works? It’s past? It’s architecture?&lt;/p&gt;

&lt;p&gt;Let’s start with a simple question,&lt;/p&gt;

&lt;h2 id=&quot;what-is-version-controlling&quot;&gt;What is Version Controlling?&lt;/h2&gt;
&lt;p&gt;It is a simple system, which manages different versions and drafts of softwares (but not limited to only softwares). It is the mean of recording changes in files (softwares are nothing but systematic collections of files). Let’s take an example, books have different version (editions) then the collections of all this versions with difference (what changed in which version) can be referred to VCS.&lt;/p&gt;

&lt;h2 id=&quot;why-it-is-so-important&quot;&gt;Why it is so important?&lt;/h2&gt;
&lt;p&gt;It is used to get previous state. Getting previous version of book in above example. You can easily trace history of files. With this system, you can easily restore to any previous state easily. For example you are working on an product to revamp it’s UI, but designs are not yet decided. So to impress your boss, you tried different UI’s and showed it to your boss. But unfortunately boss rejects all of them and gave you new designs. So in order start work, you have to restore to previous state for which either use continuous &lt;code class=&quot;highlighter-rouge&quot;&gt;ctrl+z&lt;/code&gt; (which will only be useful for small changes) or use &lt;strong&gt;VCS&lt;/strong&gt;. With VCS you can restore within few seconds.&lt;/p&gt;

&lt;p&gt;There are mainly 3 models of VCS:-&lt;/p&gt;

&lt;h3 id=&quot;local-data-model&quot;&gt;Local data model&lt;/h3&gt;
&lt;p&gt;In this model, all developer must use the same file system (file system varies with OS).&lt;/p&gt;

&lt;p&gt;Limitations:- All developers have a bound to use same file system/OS while working on a single project.&lt;/p&gt;

&lt;p&gt;e.g.:- Revision Control System (RCS) and Source Code Control System (SCCS). Both of them are open source.&lt;/p&gt;

&lt;h3 id=&quot;client-server-model&quot;&gt;Client-server model&lt;/h3&gt;
&lt;p&gt;In this model, developers works on a single repo hosted on server.&lt;/p&gt;

&lt;p&gt;Limitations:- developers can’t create there own local repo.&lt;/p&gt;

&lt;p&gt;e.g.:- Open source – Concurrent Versions System (CVS), Subversion (SVN) etc&lt;/p&gt;

&lt;p&gt;Proprietary – IBM Rational Synergy, Vault etc.&lt;/p&gt;

&lt;h3 id=&quot;distributed-model&quot;&gt;Distributed model&lt;/h3&gt;
&lt;p&gt;In this, each developer works directly with his own local repo, changes are shared between repo as a separate step (merge commits).&lt;/p&gt;

&lt;p&gt;It is most widely used model.&lt;/p&gt;

&lt;p&gt;e.g.:- Open source – Git, ArX, SVK, GNU arch etc&lt;/p&gt;

&lt;p&gt;Proprietary – Code Co-op, Plastic SCM etc&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Git&lt;/strong&gt; is most common along all of them. It is written in a collection of &lt;strong&gt;Perl&lt;/strong&gt;, &lt;strong&gt;C&lt;/strong&gt;, and &lt;strong&gt;various shell scripts&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;why-it-is-used-so-widely&quot;&gt;Why it is used so widely?&lt;/h2&gt;
&lt;p&gt;Some advantages of VCS:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Easily understand who made a change &amp;amp; when it happened and then when it went to production (through releases).&lt;/li&gt;
  &lt;li&gt;Feel free to try different approaches as it is very simple to revert back.&lt;/li&gt;
  &lt;li&gt;No need of manually combining work of your teammates.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;basic-concepts&quot;&gt;Basic concepts&lt;/h2&gt;
&lt;h3 id=&quot;recording-changes&quot;&gt;Recording changes&lt;/h3&gt;
&lt;p&gt;It is the primary work of VCS. It generally records change, date of change, author. You can tell VCS which files/directories to track (some are OS generated and vary from one system to another). In Git,
Put files in &lt;code class=&quot;highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt; if you don’t wish to track them.
Run &lt;code class=&quot;highlighter-rouge&quot;&gt;git add path/of/file&lt;/code&gt; to make file/dir trackable.
As you make changes, it will track each of them. Run &lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt; to get which file have been changed. It will only show those changes which are not committed. Once committed they will not be shown in the output of &lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;committing&quot;&gt;Committing&lt;/h3&gt;
&lt;p&gt;As you make changes VCS will track them automatically. Changes can be of addition and deletion. Addition means adding content to file and same for deletions. Once you are in a state which is consistent you can commit.
&lt;strong&gt;How to commit?&lt;/strong&gt;
In Git, run &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit path/to/file -m ‘Commit message’&lt;/code&gt;.
Tip:- commit message can be divided into two part title and message. Title consists of brief message, (eg:- fix: app crash on clicking more info button) and message which describes changes (eg:- make sure items array is not null. Added try catch)
It looks like
&lt;code class=&quot;highlighter-rouge&quot;&gt;fix: app crash on clicking more info button
make sure items array is not null.Added try catch.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to get list of commits?&lt;/strong&gt;
In Git, run &lt;code class=&quot;highlighter-rouge&quot;&gt;git log&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;updating-your-codebase&quot;&gt;Updating your codebase.&lt;/h3&gt;
&lt;p&gt;As your team members commit changes, it is very much important to get them (maintain latest codebase). Working on latest codebase reduces conflicts. Now question arises How to get updates? It is as simple as performing a pull (or fetch and then rebase) or update form another source (copy paste). While pulling (or fetching) only objects which are changed are downloaded.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conflicts&lt;/strong&gt;                                                                                                       &lt;br /&gt;
What are conflicts? How they arises?
While merging two code if system get’s confused which to take, then system takes help from you which code to consider. Let’s take an example:-We have a project in a consistent state, let’s say A. Both the person 1 and 2 have the copy which is at state A. Now person 1 commits a changes in file q at line number 3 and pushed it to the host (so that other one can get changes). On the other hand person 2 is also working on file q and done changes in line number 3. Now when person 2 updates his code (through pull or rebase), system will throw conflicts on line 3 of file q. System is confused which change to consider, changes of person 1 or person 2. So while updating, system will let us to decide what to do, which code should be final (taken).  It will look like this&lt;/p&gt;

&lt;p&gt;&lt;em&gt;in file q&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;..........
&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;HEAD
I am person 1, I have done changes in this line (line number 3).
=======
I am person 2, I have done changes in this line (line number 3).
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;
..........
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now person 2 have to decide:&lt;/p&gt;

&lt;p&gt;1) either take changes of person 1. (for this edit file in below manner and save it.)&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   ..........
   I am person 1, I have done changes in this line (line number 3).
   ..........
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;2) or override it with his changes (for this edit file in below manner and save it.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   ..........
   I am person 2, I have done changes in this line (line number 3).
   ..........
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;3) or take both changes or do something else. (for this edit file in below manner and save it.)&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ..........
  I am person 1, I have done changes in this line (line number 3).
  I am person 2, I have done changes in this line (line number 3).
  Combine this changes as you want.
  ..........
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and finally run continue command to tell that you have removed conflicts, now system can proceed to merge. (run &lt;code class=&quot;highlighter-rouge&quot;&gt;git add path/of/files&lt;/code&gt; and then &lt;code class=&quot;highlighter-rouge&quot;&gt;git rebase —continue&lt;/code&gt; to continue rebasing in git).&lt;/p&gt;

&lt;h3 id=&quot;branching&quot;&gt;Branching&lt;/h3&gt;

&lt;p&gt;It is helpful when you want to do experiments.
 1) Let’s say you are in master branch and in order to impress your boss you want to experiment some new features. So in such cases you can checkout to new branch, experiment it, show it to your boss. If it is approved then merge it to the main master branch else drop it and continue work on master.
 2) Another use of branching, Use master branch for releases, means always this branch will contain code which is stable. So whenever someone wants to use your code, he can refer to to master. And in the mean time to can continue work on another branch (let’s say bug-fix). With the addition of new feature there are possibility of bugs, so add new feature in bug-fix branch and wait until you feels that it is now stable and then merge it to the master.
 3) Another common use is contributing in open source. You can works on different issues and create multiple PR by making branches.&lt;/p&gt;

&lt;h3 id=&quot;revision&quot;&gt;Revision&lt;/h3&gt;
&lt;p&gt;When changes are committed, a new commit is recorded in the system. Each commit is given a unique identity which varies on different systems. Git uses hashing, it gives a unique hash code to each commit. Hash code looks like &lt;code class=&quot;highlighter-rouge&quot;&gt;936d9ba5c3ad345831e5846eee7d92415cfd3f8a&lt;/code&gt;. Each commit consists of
 1) changes make in files
 2) Changes made in which files
 3) changes are done by whom
 4) date of changes
Revision is mostly helpful when we are working in a team, to know changes done by other person. Different systems have different representation of showing diff.
In diff, addition are shown in green colour while deletion are in red.
Use &lt;code class=&quot;highlighter-rouge&quot;&gt;gitk&lt;/code&gt; command to get history (and full revision)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vishwesh3/central-medic-center/commit/bad16e13f2e313541b6b42d5baa9db20ff5b6329&quot;&gt;Click here&lt;/a&gt; to get an idea of how diff looks like.&lt;/p&gt;

&lt;h2 id=&quot;concluding&quot;&gt;Concluding&lt;/h2&gt;

&lt;p&gt;I hope you will get an basic idea on What is VCS, how it makes development easy and other concepts of VCS. Find my another blog on &lt;a href=&quot;https://vishwesh3.github.io/i-introduction-to-git/&quot;&gt;Introduction to GIT&lt;/a&gt;. If you find anything difficult, just ping me on catchvishwesh@gmail.com, I would love to help you.&lt;/p&gt;

&lt;p&gt;Have a nice day!&lt;/p&gt;</content><author><name>vishwesh</name></author><category term="blog" /><category term="git" /><category term="vcs" /><summary type="html">What is VCS? What is the use of this? Why it is used so widely? How does it works? It’s past? It’s architecture?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/VCS.jpeg" /></entry><entry><title type="html">Wimator - Android App</title><link href="http://localhost:4000/wimator/" rel="alternate" type="text/html" title="Wimator - Android App" /><published>2017-03-18T23:04:00+05:30</published><updated>2017-03-18T23:04:00+05:30</updated><id>http://localhost:4000/wimator</id><content type="html" xml:base="http://localhost:4000/wimator/">&lt;p&gt;&lt;strong&gt;Maximum login limit.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I think almost everyone (LNMIITians) in familiar with this one. College is providing only one login per login portal, and this message appears when we try to login in another device. Many times we forget to log out when we move from LT area to hostels (or vice versa).  &lt;strong&gt;Wimator&lt;/strong&gt; is a perfect solution for this problem.&lt;/p&gt;

&lt;p&gt;I have faced this problem many time, I have to wait for 15-20 minutes ideally until portal is logged off automatically. Every second of this 15 minutes is felt like an hour. This gave me an idea why shouldn’t I take this problem as an opportunity and develop an app which automatically logs off my portal as soon as device leave the network.&lt;/p&gt;

&lt;h3 id=&quot;here-are-some-cool-amazing-features-of-wimator&quot;&gt;Here are some cool amazing features of &lt;strong&gt;Wimator&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Simple to use.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Just install it from &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.jainkuniya.wimator&quot; target=&quot;_blank&quot;&gt; play store &lt;/a&gt;, configure your Login Id &amp;amp; password. And all set to go.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Manage WiFi networks.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Easily manage networks for whom you want to enable &lt;strong&gt;Auto Login&lt;/strong&gt; and &lt;strong&gt;Override Login&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Auto Login&lt;/strong&gt; :- Wimator will automatically log in if login is required in that WiFi network.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Override Login&lt;/strong&gt; :- Wimator will send Login request even when another user is logged in.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.jainkuniya.wimator&quot; target=&quot;_blank&quot;&gt;
  &lt;img border=&quot;2&quot; align=&quot;center&quot; src=&quot;/assets/images/wimator-manage-wifi.jpg&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Get Recent sessions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.jainkuniya.wimator&quot; target=&quot;_blank&quot;&gt;
  &lt;img border=&quot;2&quot; align=&quot;center&quot; src=&quot;/assets/images/wimator-recent-sessions.jpg&quot; /&gt;
&lt;/a&gt;
Recent sessions include IP address assigned to your device when it is connected to WiFi network. It also contain’s starting time and end time of connection.&lt;/p&gt;

&lt;p&gt;IP might be helpful in case your phone switched off and Wimator does not get’s chance to log off. You can easily set up static IP in other device and log out your portal. Get more info on static IP:-&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.ubuntu.com/lts/serverguide/network-configuration.html&quot; target=&quot;_blank&quot;&gt; Ubuntu &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.howtogeek.com/howto/19249/how-to-assign-a-static-ip-address-in-xp-vista-or-windows-7/&quot; target=&quot;_blank&quot;&gt; Windows &lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;Login/Logout on finger tips&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Wimator has a cool widget that allows you to log in and log out with a single click. It also contains status, which shows your current status.&lt;/p&gt;

&lt;p&gt;Status can be of:-&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;whether the device is connected to WiFi network or not.&lt;/li&gt;
  &lt;li&gt;whether the portal is reachable or not.&lt;/li&gt;
  &lt;li&gt;status of app actions such as
    &lt;ul&gt;
      &lt;li&gt;performing log in.&lt;/li&gt;
      &lt;li&gt;performing log out.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;current status
    &lt;ul&gt;
      &lt;li&gt;successfully logged in.&lt;/li&gt;
      &lt;li&gt;successfully logged off.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;sign in is required or not.&lt;/li&gt;
  &lt;li&gt;shows server messages like incorrect credentials.&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;Notification&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.jainkuniya.wimator&quot; target=&quot;_blank&quot;&gt;
  &lt;img border=&quot;2&quot; align=&quot;center&quot; src=&quot;/assets/images/wimator-notification-logged-in.jpg&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All the actions can also be performed from notifications.
Notification helps you in remembering that you have logged in.
Get a notification whenever a device is disconnected from WiFi network without logging off (if logged in from Wimator app). Manage WiFi network’s in which you want to enable auto login; whenever device is connected first time to that network. Send a logout request easily from notification action button.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Set your threshold WiFi strength.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.jainkuniya.wimator&quot; target=&quot;_blank&quot;&gt;
  &lt;img border=&quot;2&quot; align=&quot;center&quot; src=&quot;/assets/images/wimator-wifi-threshold.jpg&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is the percentage of WiFi strength, below which Wimator will auto log off. Let us understand it through an example:-
Let threshold is set to 40, then whenever strength becomes less than 40% Wimator will auto log off (if logged in from Wimator app).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;No need to log in again in order to log off.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Whenever log in is performed from the mobile browser, log in button turns to log out button. But if device RAM is cleared or browser is closed or that tab is closed, then in order to log out you have to re-login to get log out button. With Wimator log out can be performed easily.&lt;/p&gt;

&lt;h3 id=&quot;credits&quot;&gt;Credits&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Thanks &lt;a href=&quot;https://twitter.com/aditya100158?lang=en&quot;&gt;@aditya100158&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://twitter.com/ankursmooth?lang=en&quot;&gt;@ankursmooth&lt;/a&gt; for all the motivation and guidance.&lt;/li&gt;
  &lt;li&gt;Thanks &lt;a href=&quot;https://twitter.com/vcoolsanghai?lang=en&quot;&gt;@vcoolsanghai&lt;/a&gt; for &lt;strong&gt;Our Hotspot&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hava a nice day;
Feedback are welcomed.&lt;/p&gt;</content><author><name>vishwesh</name></author><category term="blog" /><category term="android" /><category term="app" /><category term="automate" /><category term="wifi" /><summary type="html">Maximum login limit.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/wimator-cover.png" /></entry><entry><title type="html">Wimator - Android app</title><link href="http://localhost:4000/project-wimator/" rel="alternate" type="text/html" title="Wimator - Android app" /><published>2017-03-18T22:13:00+05:30</published><updated>2017-03-18T22:13:00+05:30</updated><id>http://localhost:4000/project-wimator</id><content type="html" xml:base="http://localhost:4000/project-wimator/">&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.jainkuniya.wimator&quot; target=&quot;_blank&quot;&gt;
  &lt;img width=&quot;180&quot; height=&quot;70&quot; border=&quot;0&quot; align=&quot;center&quot; src=&quot;/assets/images/play-store.png&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wimator is an easy solution for auto login/logout in Captive Portals. It will automatically login in enabled WiFi networks whenever device gets connected. It allows users to manage WiFi networks for which auto login/logout should be performed. It also creates WiFi sessions which include IP address of the device; might be useful to log out portal from another device.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;key-features&quot;&gt;Key Features&lt;/h2&gt;

&lt;h3 id=&quot;v1006&quot;&gt;v1.0.0.6&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Reduced APK size (691 KB)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;v1005&quot;&gt;v1.0.0.5&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Auto login/logout.&lt;/li&gt;
  &lt;li&gt;Manage WiFi networks.&lt;/li&gt;
  &lt;li&gt;Allows auto login and override login.&lt;/li&gt;
  &lt;li&gt;Get recent sessions.&lt;/li&gt;
  &lt;li&gt;Set threshold WiFi strength when to automatically log off.&lt;/li&gt;
  &lt;li&gt;Perform login/logout from notification.&lt;/li&gt;
  &lt;li&gt;Get status in the widget.&lt;/li&gt;
  &lt;li&gt;Easily login/logout from the widget.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;developers-note&quot;&gt;Developer’s note&lt;/h2&gt;

&lt;p&gt;My university allows only one login per internet portal. While returning from LT area or canteen I usually forget to log off my portal and thus I can’t access internet in my hostel (“Maximum login limit”) until my portal is automatically logged off. I developed this app so that portal gets automatically logged off whenever WiFi strength becomes low. App shows an notification, which reminds me to log off before I turn off WiFi.&lt;/p&gt;

&lt;p&gt;For more info find my blog on &lt;a href=&quot;https://vishwesh3.github.io/wimator/&quot;&gt;Wimator&lt;/a&gt;;&lt;/p&gt;

&lt;hr /&gt;</content><author><name>vishwesh</name></author><category term="wimator" /><category term="automate" /><category term="wifi" /><category term="android" /><category term="apps" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/wimator-logo.png" /></entry><entry><title type="html">Introdution to GIT</title><link href="http://localhost:4000/i-introduction-to-git/" rel="alternate" type="text/html" title="Introdution to GIT" /><published>2017-03-01T20:19:00+05:30</published><updated>2017-03-01T20:19:00+05:30</updated><id>http://localhost:4000/i-introduction-to-git</id><content type="html" xml:base="http://localhost:4000/i-introduction-to-git/">&lt;p&gt;Let’s start with a simple question.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is GIT?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Git is &lt;strong&gt;version control system&lt;/strong&gt;. There are many VCS other than git eg: - CVS, SVN etc. Git
serve as the foundation of many services like Github, Gitlab etc, but it can also be used without any other services.&lt;/p&gt;

&lt;p&gt;If you have ever collaborated on any project with others, then you know how it becomes hard to copy paste both the copies(one of your’s and other of your partner). You have added a new feature to project and deployed it and distributed source code to your team, one team member enhanced that one, in the meanwhile you fixed some bugs, now it becomes difficult to combine both the works.&lt;/p&gt;

&lt;p&gt;Git is an amazing tool to handle such situations;&lt;/p&gt;

&lt;p&gt;It can be used via different interfaces:-&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;GUI&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CLI (command line interfaces)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;third party software like source tree etc&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are some commands to get started with git. (I am using Github as a GIT service)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to fork a repo?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A fork is a copy of a repository. Forking a repository allows you to freely experiment with changes without affecting the original project.&lt;/p&gt;

&lt;p&gt;Just click on &lt;strong&gt;Fork&lt;/strong&gt; button on the repo and a copy will be created to your account.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to clone repo?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can clone a repo in order to make it available offline on your local machine.&lt;/p&gt;

&lt;p&gt;Get the &lt;code class=&quot;highlighter-rouge&quot;&gt;URL&lt;/code&gt; of the repo from repo page by clicking on &lt;strong&gt;Clone and download&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;and then in your terminal run command&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git clone URL&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;URL&lt;/code&gt; consists of username of the account which have hosted repo and repo name&lt;/p&gt;

&lt;p&gt;eg:- &lt;code class=&quot;highlighter-rouge&quot;&gt;git clone https://github.com/YOUR-USERNAME/YOUR-REPOSITORY&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to make your first commit?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;commit&lt;/code&gt; is done so that your changes are recorded in the repo. It stores the current content with a log message.&lt;/p&gt;

&lt;p&gt;You can add content (or new file) in the commit by&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git add path/to/file&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git add -A&lt;/code&gt; can be used to add all.&lt;/p&gt;

&lt;p&gt;then commit by&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit -a -m &quot;message.&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-a&lt;/code&gt; stands for automatically stage files that have been modified and deleted, but new files you have not told Git about are not affected.&lt;/p&gt;

&lt;p&gt;If you don’t want to commit all content&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit path/of/files -m &quot;message&quot;&lt;/code&gt; can be used.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-m&lt;/code&gt; stands for message. If multiple &lt;code class=&quot;highlighter-rouge&quot;&gt;-m&lt;/code&gt; options are given, their values are concatenated as separate paragraphs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to get logs?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Shows the commit logs.&lt;/p&gt;

&lt;p&gt;command:- &lt;code class=&quot;highlighter-rouge&quot;&gt;git log&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;it will show the list of last commits with their author details, date, message etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to create new branch?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Branching is generally done when we want to try different approach.&lt;/p&gt;

&lt;p&gt;command:- &lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout -b branch-name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Above command will create(from your current point) and checkout to the new branch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to checkout to a branch?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;command:- &lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout branch-name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to push your commits?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;command:- &lt;code class=&quot;highlighter-rouge&quot;&gt;git push origin branch-name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to update your local branch and forked repo?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can get list of tracked repositories by&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git remote&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;add a new repo in remote by&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git remote add upstream https://github.com/url&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;here &lt;code class=&quot;highlighter-rouge&quot;&gt;https://github.com/url&lt;/code&gt; is the URL of the repo from which we have forked (from which we want to update our repo).&lt;/p&gt;

&lt;p&gt;Now get the updates&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git fetch upstream&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now finally merge our local repo and fetched one.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git rebase upstream/branch-name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If there are merge conflicts then solve then and run&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git add path/of/file/in/which/changes/are/done&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now complete rebase&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git rebase --continue&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now forcefully push commits (as head is changed)&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git push -f origin branch-name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to change git default editor?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git config --global core.editor &quot;vim&quot;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I generally prefer &lt;code class=&quot;highlighter-rouge&quot;&gt;vim&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to squash your commits?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;First get the hashcode of the previous commit, after which you want to squash&lt;/p&gt;

&lt;p&gt;run &lt;code class=&quot;highlighter-rouge&quot;&gt;git log&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;copy the hashcode.&lt;/p&gt;

&lt;p&gt;Interactive rebase off of a point earlier in the history than the commit you need to modify&lt;/p&gt;

&lt;p&gt;Now run &lt;code class=&quot;highlighter-rouge&quot;&gt;git rebase -i copied-hash-code&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt; default editor will be opened(assuming &lt;code class=&quot;highlighter-rouge&quot;&gt;vim&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;you can see the list of all the commits committed after entered hashcode.&lt;/p&gt;

&lt;p&gt;replace &lt;code class=&quot;highlighter-rouge&quot;&gt;pick&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;squash&lt;/code&gt; for all those commits which you want to squash. Save and close the file (&lt;code class=&quot;highlighter-rouge&quot;&gt;:wq&lt;/code&gt; for &lt;code class=&quot;highlighter-rouge&quot;&gt;vim&lt;/code&gt;). After closing new file will be opened containing the list of all commit messages(which you want to squash), now enter your message for single commit and save it.&lt;/p&gt;

&lt;p&gt;You can use &lt;code class=&quot;highlighter-rouge&quot;&gt;git log&lt;/code&gt; to verify that commit are squashed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to edit your commits messages?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you want to change message of the last commit then run&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit --amend -m &quot;New commit message&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Another way is to replace &lt;code class=&quot;highlighter-rouge&quot;&gt;pick&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;edit&lt;/code&gt; in the file opened above.&lt;/p&gt;

&lt;p&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit --amend&lt;/code&gt; to enter the new commit message and &lt;code class=&quot;highlighter-rouge&quot;&gt;git rebase --continue&lt;/code&gt; to continue to rebase.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to drop commits?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Replace &lt;code class=&quot;highlighter-rouge&quot;&gt;pick&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;drop&lt;/code&gt; in the file opened above.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to change author details?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Replace &lt;code class=&quot;highlighter-rouge&quot;&gt;pick&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;edit&lt;/code&gt; in the above file.&lt;/li&gt;
  &lt;li&gt;Run &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit --amend --author=&quot;Author Name &amp;lt;email@address.com&amp;gt;&quot;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;and &lt;code class=&quot;highlighter-rouge&quot;&gt;git rebase --continue&lt;/code&gt; to continue rebase&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;How to rearrange your commits?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Rearrange the commit lines in the file, which was opened by &lt;code class=&quot;highlighter-rouge&quot;&gt;git rebase -i copied-hash-code&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;That’s it, you can easily start &lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt; in your project with this commands. Get more info from &lt;a href=&quot;https://git-scm.com/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Have a nice day!&lt;/p&gt;</content><author><name>vishwesh</name></author><category term="blog" /><category term="git" /><category term="vcs" /><summary type="html">Let’s start with a simple question.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/Git-Logo.png" /></entry><entry><title type="html">I’m lovin’ it</title><link href="http://localhost:4000/i-am-loving-it/" rel="alternate" type="text/html" title="I'm lovin' it" /><published>2017-02-15T21:48:00+05:30</published><updated>2017-02-15T21:48:00+05:30</updated><id>http://localhost:4000/i-am-loving-it</id><content type="html" xml:base="http://localhost:4000/i-am-loving-it/">&lt;p&gt;I recently started contributing to open source. On my way till now, I have learned a lot from writing reusable code to collaborating with others on version control system(VCS).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are Open Source Softwares(OSS)?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yes, these are computer software, whose source code is made publicly available (like as on Github, Gitlab, cloud storage etc). A contributor can modify, enhance, optimize in order to make it more feasible. OSS may be licensed. What a license does is, grant specific permissions for others to use that work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to contribute to open source projects?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Explore open source softwares. Find a bug. Report it. Take a challenge and try to resolve it. Take help from mentors to understand the codebase.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Work on an existing issue.
You can find some opened issues in the repository of the projects.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Reporting a bug&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bug/issue management is one of the easiest ways to contribute to an open source project but also is one of the most important parts of maintaining the project. I, myself, started contributing by reporting a bug. One can also start via enhancing feature.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to contact mentors?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are many ways to contact mentors:-&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;via the mailing list.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;via IRC.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;via Google Groups/Slack/Gitter etc.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;My journey throughout this world until now&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Getting started with an open source project can be intimidating. I wanted to contribute to open source projects, but struggled with where to start.&lt;/p&gt;

&lt;p&gt;I started my journey exploring Android projects on Github, found some bugs and made some pull requests(PR) for the latter. When my first PR got merged it gave me feeling of accomplishment. I was really motivated to enter the world of Open Source.&lt;/p&gt;

&lt;p&gt;Here’s my experience&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Improved my code understanding skills&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is really important to understand existing code in order to solve a bug or enhance a feature.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Learn from mistakes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nobody is perfect. Everyone makes mistake. So, don’t get disappointed and stop working. Accept them, make a note and learn from it.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Have patience&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It’s human behavior, when we achieve something big, we forget to do some necessary checks and take actions. In this context, when a critical bug is resolved, don’t rush to make PR, test it properly, clean the code, write relevant comments, remove unnecessary Logcat used in the process of debugging. After checking all this, take a deep breath and hope for good. Finally, commit with a descriptive commit message and submit a new PR.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Include your approach in issues and PR&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It helps mentors in reviewing PR, how the issue has been solved. Also, it is better to discuss your approach.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Solving bugs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;No matters how difficult it is to solve a bug, solutions always exist. Start debugging, include break points and hit debug option. This will not only give you the value of a variable at any particular time instance but also will help you in understanding the event flow of the project. You can also print log in the console in order to get a better picture of what is going on. For some critical bugs, it takes some time to resolve them, so in between stay motivated and don’t give up in your heart. Have faith in you. You can and you will do it.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Don’t run away from errors&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Usually, we are familiar with creating new projects and successfully deploying it. But we are not sure, when we clone a project and run it, whether it will build without any error. For larger projects, you will definitely face some error. This is because the project may be using some libraries or modules which are not installed on your local machine. Dig into the error, search about them, ask help from mentors and try harder everytime.&lt;/p&gt;

&lt;p&gt;This point played a major role in my journey. 70-80% of the cloned projects gave me errors while building. Carefully read the README file of projects. You may get hints about what you are missing. Look for the error, try different solutions.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Git&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course, Git is a powerful tool for version controlling of the project. I was really scared using it, but as my journey proceeded I become more and more familiar with it.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Share your experience and help others&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Yes, this community motivated me to share my experience and eventually today I am writing this Blog. It is well said that &lt;strong&gt;“In any open source community, Teaching and Learning go side by side.”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you’ve ever tried to debug a frustrating problem within the codebase of a software, you will probably be Googling to find the answer. Google doesn’t know the answer, of course. It can only point you to web pages that others have created. That’s where forums(like &lt;a href=&quot;http://stackoverflow.com/&quot;&gt;StackOverflow&lt;/a&gt;) and blogs( like &lt;a href=&quot;http://www.androidauthority.com/&quot;&gt;Android Authority&lt;/a&gt;) come into the picture.&lt;/p&gt;

&lt;h3 id=&quot;concluding&quot;&gt;Concluding&lt;/h3&gt;

&lt;p&gt;Contributing to open source projects is not as scary as it may look. Dig a bit and you will definitely find projects which excite you. You can search “Open source projects for “&amp;lt;your interest&amp;gt;”.&lt;/p&gt;

&lt;p&gt;I hope this encourages you to find a project you’re interested in and to be courageous enough to make that first commit.&lt;/p&gt;</content><author><name>vishwesh</name></author><category term="blog" /><category term="open-source" /><summary type="html">I recently started contributing to open source. On my way till now, I have learned a lot from writing reusable code to collaborating with others on version control system(VCS).</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/open-source.jpg" /></entry><entry><title type="html">Welcome to my corner</title><link href="http://localhost:4000/welcome-post/" rel="alternate" type="text/html" title="Welcome to my corner" /><published>2017-02-05T15:56:00+05:30</published><updated>2017-02-05T15:56:00+05:30</updated><id>http://localhost:4000/welcome-post</id><content type="html" xml:base="http://localhost:4000/welcome-post/">&lt;p&gt;Nice that you’re here. This is my personal blog which includes my work experience, tricks, tutorials etc. Not regularly, but as soon as I got some stuff in my mind.
If you have any questions, just let me know. I will be happy to address them.&lt;/p&gt;

&lt;p&gt;I love to address questions and find its best optimal solution. From last 7-8 months, I am also answering on &lt;a href=&quot;http://bit.ly/vjkstack&quot;&gt;stackoverflow&lt;/a&gt;. Suddenly I thought that why shouldn’t I write a blog to share my work, interest etc. That’s why I have created this corner to share my blogs. Thanks &lt;a href=&quot;http://koppl.in/&quot;&gt;@sergiokopplin&lt;/a&gt; for providing such a beautiful theme.&lt;/p&gt;

&lt;p&gt;Also, sometimes I might write about Opensource technology (yeah! I’m in love with the open source from past some time), besides that whatever new technology I work with there will definitely be some stuff about that as well. After entering into the world of developing I have learned a lot from blogs, online tutorials, existing code on GitHub etc, this is also a reason why I have created this corner. To make available my experiences so that upcoming generation can take advantage of this and learn better from experience than experimenting already experimented stuff.&lt;/p&gt;

&lt;p&gt;Thanks for being here and stay tuned for my upcoming blogs.&lt;/p&gt;</content><author><name>vishwesh</name></author><category term="welcome" /><summary type="html">Nice that you’re here. This is my personal blog which includes my work experience, tricks, tutorials etc. Not regularly, but as soon as I got some stuff in my mind. If you have any questions, just let me know. I will be happy to address them.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/welcome.jpg" /></entry><entry><title type="html">LiveUnite - Android app</title><link href="http://localhost:4000/project-liveunite/" rel="alternate" type="text/html" title="LiveUnite - Android app" /><published>2016-12-03T19:41:00+05:30</published><updated>2016-12-03T19:41:00+05:30</updated><id>http://localhost:4000/project-liveunite</id><content type="html" xml:base="http://localhost:4000/project-liveunite/">&lt;p&gt;&lt;a href=&quot;http://bit.ly/liveunite&quot; target=&quot;_blank&quot;&gt;
  &lt;img width=&quot;180&quot; height=&quot;70&quot; border=&quot;0&quot; align=&quot;center&quot; src=&quot;/assets/images/play-store.png&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;LiveUnite app allows you to discover nearby people based on your geographical location to better choose who you hang out with, travel, date, become your neighbors, roommates, and learn, teach, and express yourself.&lt;/p&gt;

&lt;p&gt;My work was basically to develop an android app from scratch for such an amazing platform. App, where user can easily create their account with a single click, and within seconds upload their first post. Get the feeds from nearby people and locate them on the map. Place where user can customize their feeds according to distance and age.&lt;/p&gt;

&lt;p&gt;It was a great pleasure for me to work with LiveUnite team.&lt;/p&gt;

&lt;hr /&gt;</content><author><name>vishwesh</name></author><category term="liveunite" /><category term="android" /><category term="apps" /><category term="unite" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/liveunite.png" /></entry><entry><title type="html">Mr Hot - Android app</title><link href="http://localhost:4000/project-mr-hot/" rel="alternate" type="text/html" title="Mr Hot - Android app" /><published>2016-08-03T19:41:00+05:30</published><updated>2016-08-03T19:41:00+05:30</updated><id>http://localhost:4000/project-mr-hot</id><content type="html" xml:base="http://localhost:4000/project-mr-hot/">&lt;p&gt;&lt;a href=&quot;http://bit.ly/mr-hot-app&quot; target=&quot;_blank&quot;&gt;
  &lt;img width=&quot;180&quot; height=&quot;70&quot; border=&quot;0&quot; align=&quot;center&quot; src=&quot;/assets/images/play-store.png&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mr. HOT offers customized meals so that you can choose what you want to eat as per your whims and wishes.Unlike any other tiffin service provider, Mr. HOT gives you the choice of deciding your own personalized menu. Their meals are based on a sound bed rock of nutrition research, designed by a team of expert chefs.&lt;/p&gt;

&lt;p&gt;They offer different varieties of dishes which includes Indian, Chinese, Italian,Exotic Deserts, Shakes and Drinks and other fast food products.&lt;/p&gt;

&lt;p&gt;My work was basically to develop an android app from scratch for ordering food online.
Features Implemented:-&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Share &amp;amp; Earn&lt;/li&gt;
  &lt;li&gt;Manage account&lt;/li&gt;
  &lt;li&gt;Push Notifications for updates and offers&lt;/li&gt;
  &lt;li&gt;Login/Sign up/Reset Password&lt;/li&gt;
  &lt;li&gt;App for admin
Adding a payment gateway, and finally, move it to production. It also works offline.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It was a great pleasure for me to work with Mr. Hot team.&lt;/p&gt;

&lt;hr /&gt;</content><author><name>vishwesh</name></author><category term="mr-hot" /><category term="android" /><category term="apps" /><category term="food" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/mr-hot-logo.png" /></entry></feed>